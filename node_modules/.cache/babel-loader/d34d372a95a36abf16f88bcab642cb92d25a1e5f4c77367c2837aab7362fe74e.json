{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raedw\\\\OneDrive\\\\Desktop\\\\sarra\\\\FE\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Page/Home/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst travelData = [{\n  \"departure city\": \"Paris\",\n  airports: [{\n    airportName: \"Charles de Gaulle Airport\",\n    distance: \"25KM\"\n  }, {\n    airportName: \"Orly Airport\",\n    distance: \"14KM\"\n  }, {\n    airportName: \"Beauvais-Tillé Airport\",\n    distance: \"85KM\"\n  }, {\n    airportName: \"Le Bourget Airport\",\n    distance: \"13KM\"\n  }],\n  destinations: [{\n    city: \"London\",\n    airports: [{\n      airportName: \"Heathrow Airport\",\n      distance: \"24KM\"\n    }, {\n      airportName: \"Gatwick Airport\",\n      distance: \"45KM\"\n    }, {\n      airportName: \"Stansted Airport\",\n      distance: \"63KM\"\n    }, {\n      airportName: \"Luton Airport\",\n      distance: \"55KM\"\n    }]\n  }, {\n    city: \"Rome\",\n    airports: [{\n      airportName: \"Fiumicino Airport\",\n      distance: \"32KM\"\n    }, {\n      airportName: \"Ciampino Airport\",\n      distance: \"15KM\"\n    }, {\n      airportName: \"Perugia San Francesco d'Assisi Airport\",\n      distance: \"164KM\"\n    }, {\n      airportName: \"Pescara Abruzzo Airport\",\n      distance: \"208KM\"\n    }]\n  }, {\n    city: \"Berlin\",\n    airports: [{\n      airportName: \"Berlin Brandenburg Airport\",\n      distance: \"22KM\"\n    }, {\n      airportName: \"Leipzig/Halle Airport\",\n      distance: \"150KM\"\n    }, {\n      airportName: \"Dresden Airport\",\n      distance: \"172KM\"\n    }, {\n      airportName: \"Erfurt-Weimar Airport\",\n      distance: \"235KM\"\n    }]\n  }]\n}, {\n  \"departure city\": \"London\",\n  airports: [{\n    airportName: \"Heathrow Airport\",\n    distance: \"24KM\"\n  }, {\n    airportName: \"Gatwick Airport\",\n    distance: \"45KM\"\n  }, {\n    airportName: \"Stansted Airport\",\n    distance: \"63KM\"\n  }, {\n    airportName: \"Luton Airport\",\n    distance: \"55KM\"\n  }],\n  destinations: [{\n    city: \"Paris\",\n    airports: [{\n      airportName: \"Charles de Gaulle Airport\",\n      distance: \"25KM\"\n    }, {\n      airportName: \"Orly Airport\",\n      distance: \"14KM\"\n    }, {\n      airportName: \"Beauvais-Tillé Airport\",\n      distance: \"85KM\"\n    }, {\n      airportName: \"Le Bourget Airport\",\n      distance: \"13KM\"\n    }]\n  }, {\n    city: \"Rome\",\n    airports: [{\n      airportName: \"Fiumicino Airport\",\n      distance: \"32KM\"\n    }, {\n      airportName: \"Ciampino Airport\",\n      distance: \"15KM\"\n    }, {\n      airportName: \"Perugia San Francesco d'Assisi Airport\",\n      distance: \"164KM\"\n    }, {\n      airportName: \"Pescara Abruzzo Airport\",\n      distance: \"208KM\"\n    }]\n  }, {\n    city: \"Berlin\",\n    airports: [{\n      airportName: \"Berlin Brandenburg Airport\",\n      distance: \"22KM\"\n    }, {\n      airportName: \"Leipzig/Halle Airport\",\n      distance: \"150KM\"\n    }, {\n      airportName: \"Dresden Airport\",\n      distance: \"172KM\"\n    }, {\n      airportName: \"Erfurt-Weimar Airport\",\n      distance: \"235KM\"\n    }]\n  }]\n}];\nfunction App() {\n  _s();\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [selectStartDate, setSelectStartDate] = useState(\"\");\n  const [selectEndDate, setSelectEndDate] = useState(\"\");\n  const [selectedAirport, setSelectedAirport] = useState(\"\");\n  const [destinationCities, setDestinationCities] = useState(\"\");\n  const [travelPlan, setTravelPlan] = useState([]);\n  const handleCityChange = e => {\n    setSelectedCity(e.target.value);\n    setSelectedAirport(\"\");\n    setTravelPlan([]);\n  };\n  const handleAirportChange = e => {\n    setSelectedAirport(e.target.value);\n    setTravelPlan([]);\n  };\n  const handleDestinationChange = e => {\n    setDestinationCities(e.target.value);\n  };\n  const handleStartDateChange = e => {\n    setSelectStartDate(e.target.value);\n  };\n  const handleEndDateChange = e => {\n    setSelectEndDate(e.target.value);\n  };\n  const handleGeneratePlan = () => {\n    const destinations = destinationCities.split(\",\").map(city => city.trim());\n    const plan = [];\n    for (let i = 0; i < destinations.length; i++) {\n      const departureCity = i === 0 ? selectedCity : destinations[i - 1];\n      const destinationCity = destinations[i];\n      const departureData = travelData.find(city => city[\"departure city\"] === departureCity);\n      if (departureData) {\n        const destinationData = departureData.destinations.find(dest => dest.city === destinationCity);\n        if (destinationData) {\n          const airport = destinationData.airports[0];\n          plan.push({\n            to: destinationCity,\n            airport: airport.airportName,\n            distance: airport.distance\n          });\n        }\n      }\n    }\n    setTravelPlan(plan);\n  };\n  const cities = travelData.map(city => city[\"departure city\"]);\n  const airports = selectedCity ? travelData.find(city => city[\"departure city\"] === selectedCity).airports : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q5SQd4tupApw5V396LXOuGmqSU0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Home","jsxDEV","_jsxDEV","travelData","airports","airportName","distance","destinations","city","App","_s","selectedCity","setSelectedCity","selectStartDate","setSelectStartDate","selectEndDate","setSelectEndDate","selectedAirport","setSelectedAirport","destinationCities","setDestinationCities","travelPlan","setTravelPlan","handleCityChange","e","target","value","handleAirportChange","handleDestinationChange","handleStartDateChange","handleEndDateChange","handleGeneratePlan","split","map","trim","plan","i","length","departureCity","destinationCity","departureData","find","destinationData","dest","airport","push","to","cities","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/raedw/OneDrive/Desktop/sarra/FE/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Page/Home/Home\";\n\nconst travelData = [\n  {\n    \"departure city\": \"Paris\",\n    airports: [\n      { airportName: \"Charles de Gaulle Airport\", distance: \"25KM\" },\n      { airportName: \"Orly Airport\", distance: \"14KM\" },\n      { airportName: \"Beauvais-Tillé Airport\", distance: \"85KM\" },\n      { airportName: \"Le Bourget Airport\", distance: \"13KM\" },\n    ],\n    destinations: [\n      {\n        city: \"London\",\n        airports: [\n          { airportName: \"Heathrow Airport\", distance: \"24KM\" },\n          { airportName: \"Gatwick Airport\", distance: \"45KM\" },\n          { airportName: \"Stansted Airport\", distance: \"63KM\" },\n          { airportName: \"Luton Airport\", distance: \"55KM\" },\n        ],\n      },\n      {\n        city: \"Rome\",\n        airports: [\n          { airportName: \"Fiumicino Airport\", distance: \"32KM\" },\n          { airportName: \"Ciampino Airport\", distance: \"15KM\" },\n          {\n            airportName: \"Perugia San Francesco d'Assisi Airport\",\n            distance: \"164KM\",\n          },\n          { airportName: \"Pescara Abruzzo Airport\", distance: \"208KM\" },\n        ],\n      },\n      {\n        city: \"Berlin\",\n        airports: [\n          { airportName: \"Berlin Brandenburg Airport\", distance: \"22KM\" },\n          { airportName: \"Leipzig/Halle Airport\", distance: \"150KM\" },\n          { airportName: \"Dresden Airport\", distance: \"172KM\" },\n          { airportName: \"Erfurt-Weimar Airport\", distance: \"235KM\" },\n        ],\n      },\n    ],\n  },\n  {\n    \"departure city\": \"London\",\n    airports: [\n      { airportName: \"Heathrow Airport\", distance: \"24KM\" },\n      { airportName: \"Gatwick Airport\", distance: \"45KM\" },\n      { airportName: \"Stansted Airport\", distance: \"63KM\" },\n      { airportName: \"Luton Airport\", distance: \"55KM\" },\n    ],\n    destinations: [\n      {\n        city: \"Paris\",\n        airports: [\n          { airportName: \"Charles de Gaulle Airport\", distance: \"25KM\" },\n          { airportName: \"Orly Airport\", distance: \"14KM\" },\n          { airportName: \"Beauvais-Tillé Airport\", distance: \"85KM\" },\n          { airportName: \"Le Bourget Airport\", distance: \"13KM\" },\n        ],\n      },\n      {\n        city: \"Rome\",\n        airports: [\n          { airportName: \"Fiumicino Airport\", distance: \"32KM\" },\n          { airportName: \"Ciampino Airport\", distance: \"15KM\" },\n          {\n            airportName: \"Perugia San Francesco d'Assisi Airport\",\n            distance: \"164KM\",\n          },\n          { airportName: \"Pescara Abruzzo Airport\", distance: \"208KM\" },\n        ],\n      },\n      {\n        city: \"Berlin\",\n        airports: [\n          { airportName: \"Berlin Brandenburg Airport\", distance: \"22KM\" },\n          { airportName: \"Leipzig/Halle Airport\", distance: \"150KM\" },\n          { airportName: \"Dresden Airport\", distance: \"172KM\" },\n          { airportName: \"Erfurt-Weimar Airport\", distance: \"235KM\" },\n        ],\n      },\n    ],\n  },\n];\n\nfunction App() {\n  const [selectedCity, setSelectedCity] = useState(\"\");\n  const [selectStartDate, setSelectStartDate] = useState(\"\");\n  const [selectEndDate, setSelectEndDate] = useState(\"\");\n  const [selectedAirport, setSelectedAirport] = useState(\"\");\n  const [destinationCities, setDestinationCities] = useState(\"\");\n  const [travelPlan, setTravelPlan] = useState([]);\n\n  const handleCityChange = (e) => {\n    setSelectedCity(e.target.value);\n    setSelectedAirport(\"\");\n    setTravelPlan([]);\n  };\n\n  const handleAirportChange = (e) => {\n    setSelectedAirport(e.target.value);\n    setTravelPlan([]);\n  };\n\n  const handleDestinationChange = (e) => {\n    setDestinationCities(e.target.value);\n  };\n  const handleStartDateChange = (e) => {\n    setSelectStartDate(e.target.value);\n  };\n  const handleEndDateChange = (e) => {\n    setSelectEndDate(e.target.value);\n  };\n\n  const handleGeneratePlan = () => {\n    const destinations = destinationCities\n      .split(\",\")\n      .map((city) => city.trim());\n    const plan = [];\n\n    for (let i = 0; i < destinations.length; i++) {\n      const departureCity = i === 0 ? selectedCity : destinations[i - 1];\n      const destinationCity = destinations[i];\n\n      const departureData = travelData.find(\n        (city) => city[\"departure city\"] === departureCity\n      );\n      if (departureData) {\n        const destinationData = departureData.destinations.find(\n          (dest) => dest.city === destinationCity\n        );\n        if (destinationData) {\n          const airport = destinationData.airports[0];\n          plan.push({\n            to: destinationCity,\n            airport: airport.airportName,\n            distance: airport.distance,\n          });\n        }\n      }\n    }\n\n    setTravelPlan(plan);\n  };\n\n  const cities = travelData.map((city) => city[\"departure city\"]);\n  const airports = selectedCity\n    ? travelData.find((city) => city[\"departure city\"] === selectedCity)\n        .airports\n    : [];\n\n  return (\n    <div className=\"App\">\n      {/* <h1>Travel Planner</h1>\n      <div>\n        <label>\n          Departure City:\n          <select value={selectedCity} onChange={handleCityChange}>\n            <option value=\"\" disabled>\n              Select a city\n            </option>\n            {cities.map((city) => (\n              <option key={city} value={city}>\n                {city}\n              </option>\n            ))}\n          </select>\n        </label>\n        {selectedCity && (\n          <label>\n            Enter start date:\n            <input\n              type=\"date\"\n              value={selectStartDate}\n              onChange={handleStartDateChange}\n            />\n          </label>\n        )}\n        {selectedCity && selectStartDate && (\n          <label>\n            Enter end date:\n            <input\n              type=\"date\"\n              value={selectEndDate}\n              onChange={handleEndDateChange}\n            />\n          </label>\n        )}\n      </div>\n      {selectedCity && selectStartDate && selectEndDate && (\n        <div>\n          <label>\n            Departure Airport:\n            <select value={selectedAirport} onChange={handleAirportChange}>\n              <option value=\"\" disabled>\n                Select an airport\n              </option>\n              {airports.map((airport) => (\n                <option key={airport.airportName} value={airport.airportName}>\n                  {airport.airportName} ({airport.distance})\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n      )}\n      {selectedAirport && (\n        <div>\n          <label>\n            Enter destination cities (comma-separated):\n            <input\n              type=\"text\"\n              value={destinationCities}\n              onChange={handleDestinationChange}\n            />\n          </label>\n          <button onClick={handleGeneratePlan}>Generate Travel Plan</button>\n        </div>\n      )}\n      {travelPlan.length > 0 && (\n        <div>\n          <h2>Your Travel Plan</h2>\n          <p>From : {selectedCity}</p>\n          <p>Airport: {selectedAirport}</p>\n          <p>Start date: {selectStartDate}</p>\n          <p>End date: {selectEndDate}</p>\n\n          {travelPlan.map((leg, index) => (\n            <div key={index}>\n              <p> To: {leg.to}</p>\n              <p>\n                Land at: {leg.airport} ({leg.distance})\n              </p>\n            </div>\n          ))}\n        </div>\n      )} */}\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}