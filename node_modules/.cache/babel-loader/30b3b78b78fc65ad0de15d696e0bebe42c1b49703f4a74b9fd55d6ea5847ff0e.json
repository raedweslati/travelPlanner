{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raedw\\\\OneDrive\\\\Desktop\\\\sarra\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst citiesData = [{\n  \"departure city\": \"Paris\",\n  \"airports\": [{\n    \"airportName\": \"Charles de Gaulle Airport\",\n    \"distance\": \"25KM\"\n  }, {\n    \"airportName\": \"Orly Airport\",\n    \"distance\": \"14KM\"\n  }, {\n    \"airportName\": \"Beauvais-Tillé Airport\",\n    \"distance\": \"85KM\"\n  }, {\n    \"airportName\": \"Le Bourget Airport\",\n    \"distance\": \"13KM\"\n  }]\n}, {\n  \"departure city\": \"London\",\n  \"airports\": [{\n    \"airportName\": \"Heathrow Airport\",\n    \"distance\": \"24KM\"\n  }, {\n    \"airportName\": \"Gatwick Airport\",\n    \"distance\": \"45KM\"\n  }, {\n    \"airportName\": \"Stansted Airport\",\n    \"distance\": \"63KM\"\n  }, {\n    \"airportName\": \"Luton Airport\",\n    \"distance\": \"55KM\"\n  }]\n}, {\n  \"departure city\": \"Rome\",\n  \"airports\": [{\n    \"airportName\": \"Fiumicino Airport\",\n    \"distance\": \"32KM\"\n  }, {\n    \"airportName\": \"Ciampino Airport\",\n    \"distance\": \"15KM\"\n  }, {\n    \"airportName\": \"Perugia San Francesco d'Assisi Airport\",\n    \"distance\": \"164KM\"\n  }, {\n    \"airportName\": \"Pescara Abruzzo Airport\",\n    \"distance\": \"208KM\"\n  }]\n}, {\n  \"departure city\": \"Berlin\",\n  \"airports\": [{\n    \"airportName\": \"Berlin Brandenburg Airport\",\n    \"distance\": \"22KM\"\n  }, {\n    \"airportName\": \"Leipzig/Halle Airport\",\n    \"distance\": \"150KM\"\n  }, {\n    \"airportName\": \"Dresden Airport\",\n    \"distance\": \"172KM\"\n  }, {\n    \"airportName\": \"Erfurt-Weimar Airport\",\n    \"distance\": \"235KM\"\n  }]\n}];\nfunction App() {\n  _s();\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [travelPlan, setTravelPlan] = useState([]);\n  const handleCityChange = e => {\n    setSelectedCity(e.target.value);\n  };\n  const addCity = () => {\n    if (selectedCity && !selectedCities.includes(selectedCity)) {\n      setSelectedCities([...selectedCities, selectedCity]);\n      setSelectedCity('');\n    }\n  };\n  const proposeTravelPlan = () => {\n    if (selectedCities.length < 4) {\n      alert(\"Please select 4 cities.\");\n      return;\n    }\n\n    // Simple Nearest Neighbor algorithm to propose travel plan\n    const plan = [selectedCities[0]];\n    const remainingCities = [...selectedCities.slice(1)];\n    while (remainingCities.length) {\n      const lastCity = plan[plan.length - 1];\n      let nearestCity = remainingCities[0];\n      let minDistance = Infinity;\n      remainingCities.forEach(city => {\n        const distance = calculateDistance(lastCity, city);\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestCity = city;\n        }\n      });\n      plan.push(nearestCity);\n      remainingCities.splice(remainingCities.indexOf(nearestCity), 1);\n    }\n    setTravelPlan(plan);\n  };\n  const calculateDistance = (city1, city2) => {\n    // Dummy function for distance calculation, replace with real data\n    return Math.abs(citiesData.findIndex(city => city[\"departure city\"] === city1) - citiesData.findIndex(city => city[\"departure city\"] === city2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Travel Plan Selector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"City:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCity,\n          onChange: handleCityChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), citiesData.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city[\"departure city\"],\n            children: city[\"departure city\"]\n          }, city[\"departure city\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCity,\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected Cities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedCities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), selectedCities.length === 4 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: proposeTravelPlan,\n      children: \"Propose Travel Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), travelPlan.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Proposed Travel Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: travelPlan.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pRKs+5Db/2ASfLBW3Yp2ogjSzME=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","citiesData","App","_s","selectedCities","setSelectedCities","selectedCity","setSelectedCity","travelPlan","setTravelPlan","handleCityChange","e","target","value","addCity","includes","proposeTravelPlan","length","alert","plan","remainingCities","slice","lastCity","nearestCity","minDistance","Infinity","forEach","city","distance","calculateDistance","push","splice","indexOf","city1","city2","Math","abs","findIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/raedw/OneDrive/Desktop/sarra/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst citiesData = [\n  {\n    \"departure city\": \"Paris\",\n    \"airports\": [\n      { \"airportName\": \"Charles de Gaulle Airport\", \"distance\": \"25KM\" },\n      { \"airportName\": \"Orly Airport\", \"distance\": \"14KM\" },\n      { \"airportName\": \"Beauvais-Tillé Airport\", \"distance\": \"85KM\" },\n      { \"airportName\": \"Le Bourget Airport\", \"distance\": \"13KM\" }\n    ]\n  },\n  {\n    \"departure city\": \"London\",\n    \"airports\": [\n      { \"airportName\": \"Heathrow Airport\", \"distance\": \"24KM\" },\n      { \"airportName\": \"Gatwick Airport\", \"distance\": \"45KM\" },\n      { \"airportName\": \"Stansted Airport\", \"distance\": \"63KM\" },\n      { \"airportName\": \"Luton Airport\", \"distance\": \"55KM\" }\n    ]\n  },\n  {\n    \"departure city\": \"Rome\",\n    \"airports\": [\n      { \"airportName\": \"Fiumicino Airport\", \"distance\": \"32KM\" },\n      { \"airportName\": \"Ciampino Airport\", \"distance\": \"15KM\" },\n      { \"airportName\": \"Perugia San Francesco d'Assisi Airport\", \"distance\": \"164KM\" },\n      { \"airportName\": \"Pescara Abruzzo Airport\", \"distance\": \"208KM\" }\n    ]\n  },\n  {\n    \"departure city\": \"Berlin\",\n    \"airports\": [\n      { \"airportName\": \"Berlin Brandenburg Airport\", \"distance\": \"22KM\" },\n      { \"airportName\": \"Leipzig/Halle Airport\", \"distance\": \"150KM\" },\n      { \"airportName\": \"Dresden Airport\", \"distance\": \"172KM\" },\n      { \"airportName\": \"Erfurt-Weimar Airport\", \"distance\": \"235KM\" }\n    ]\n  }\n];\n\nfunction App() {\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('');\n  const [travelPlan, setTravelPlan] = useState([]);\n\n  const handleCityChange = (e) => {\n    setSelectedCity(e.target.value);\n  };\n\n  const addCity = () => {\n    if (selectedCity && !selectedCities.includes(selectedCity)) {\n      setSelectedCities([...selectedCities, selectedCity]);\n      setSelectedCity('');\n    }\n  };\n\n  const proposeTravelPlan = () => {\n    if (selectedCities.length < 4) {\n      alert(\"Please select 4 cities.\");\n      return;\n    }\n\n    // Simple Nearest Neighbor algorithm to propose travel plan\n    const plan = [selectedCities[0]];\n    const remainingCities = [...selectedCities.slice(1)];\n    \n    while (remainingCities.length) {\n      const lastCity = plan[plan.length - 1];\n      let nearestCity = remainingCities[0];\n      let minDistance = Infinity;\n      \n      remainingCities.forEach(city => {\n        const distance = calculateDistance(lastCity, city);\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestCity = city;\n        }\n      });\n      \n      plan.push(nearestCity);\n      remainingCities.splice(remainingCities.indexOf(nearestCity), 1);\n    }\n\n    setTravelPlan(plan);\n  };\n\n  const calculateDistance = (city1, city2) => {\n    // Dummy function for distance calculation, replace with real data\n    return Math.abs(citiesData.findIndex(city => city[\"departure city\"] === city1) - \n                    citiesData.findIndex(city => city[\"departure city\"] === city2));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Travel Plan Selector</h1>\n      <div>\n        <label>\n          City:\n          <select value={selectedCity} onChange={handleCityChange}>\n            <option value=\"\" disabled>Select a city</option>\n            {citiesData.map(city => (\n              <option key={city[\"departure city\"]} value={city[\"departure city\"]}>\n                {city[\"departure city\"]}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button onClick={addCity}>Add City</button>\n      </div>\n      <div>\n        <h2>Selected Cities</h2>\n        <ul>\n          {selectedCities.map(city => (\n            <li key={city}>{city}</li>\n          ))}\n        </ul>\n      </div>\n      {selectedCities.length === 4 && (\n        <button onClick={proposeTravelPlan}>Propose Travel Plan</button>\n      )}\n      {travelPlan.length > 0 && (\n        <div>\n          <h2>Proposed Travel Plan</h2>\n          <ol>\n            {travelPlan.map(city => (\n              <li key={city}>{city}</li>\n            ))}\n          </ol>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}