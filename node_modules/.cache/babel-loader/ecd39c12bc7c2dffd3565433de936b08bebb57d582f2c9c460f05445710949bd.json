{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raedw\\\\OneDrive\\\\Desktop\\\\sarra\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst travelData = [{\n  \"departure city\": \"Paris\",\n  \"destinations\": [{\n    \"city\": \"London\",\n    \"airports\": [{\n      \"airportName\": \"Heathrow Airport\",\n      \"distance\": \"24KM\"\n    }, {\n      \"airportName\": \"Gatwick Airport\",\n      \"distance\": \"45KM\"\n    }, {\n      \"airportName\": \"Stansted Airport\",\n      \"distance\": \"63KM\"\n    }, {\n      \"airportName\": \"Luton Airport\",\n      \"distance\": \"55KM\"\n    }]\n  }, {\n    \"city\": \"Rome\",\n    \"airports\": [{\n      \"airportName\": \"Fiumicino Airport\",\n      \"distance\": \"32KM\"\n    }, {\n      \"airportName\": \"Ciampino Airport\",\n      \"distance\": \"15KM\"\n    }, {\n      \"airportName\": \"Perugia San Francesco d'Assisi Airport\",\n      \"distance\": \"164KM\"\n    }, {\n      \"airportName\": \"Pescara Abruzzo Airport\",\n      \"distance\": \"208KM\"\n    }]\n  }, {\n    \"city\": \"Berlin\",\n    \"airports\": [{\n      \"airportName\": \"Berlin Brandenburg Airport\",\n      \"distance\": \"22KM\"\n    }, {\n      \"airportName\": \"Leipzig/Halle Airport\",\n      \"distance\": \"150KM\"\n    }, {\n      \"airportName\": \"Dresden Airport\",\n      \"distance\": \"172KM\"\n    }, {\n      \"airportName\": \"Erfurt-Weimar Airport\",\n      \"distance\": \"235KM\"\n    }]\n  }]\n}, {\n  \"departure city\": \"London\",\n  \"destinations\": [{\n    \"city\": \"Paris\",\n    \"airports\": [{\n      \"airportName\": \"Charles de Gaulle Airport\",\n      \"distance\": \"25KM\"\n    }, {\n      \"airportName\": \"Orly Airport\",\n      \"distance\": \"14KM\"\n    }, {\n      \"airportName\": \"Beauvais-Tillé Airport\",\n      \"distance\": \"85KM\"\n    }, {\n      \"airportName\": \"Le Bourget Airport\",\n      \"distance\": \"13KM\"\n    }]\n  }, {\n    \"city\": \"Rome\",\n    \"airports\": [{\n      \"airportName\": \"Fiumicino Airport\",\n      \"distance\": \"32KM\"\n    }, {\n      \"airportName\": \"Ciampino Airport\",\n      \"distance\": \"15KM\"\n    }, {\n      \"airportName\": \"Perugia San Francesco d'Assisi Airport\",\n      \"distance\": \"164KM\"\n    }, {\n      \"airportName\": \"Pescara Abruzzo Airport\",\n      \"distance\": \"208KM\"\n    }]\n  }, {\n    \"city\": \"Berlin\",\n    \"airports\": [{\n      \"airportName\": \"Berlin Brandenburg Airport\",\n      \"distance\": \"22KM\"\n    }, {\n      \"airportName\": \"Leipzig/Halle Airport\",\n      \"distance\": \"150KM\"\n    }, {\n      \"airportName\": \"Dresden Airport\",\n      \"distance\": \"172KM\"\n    }, {\n      \"airportName\": \"Erfurt-Weimar Airport\",\n      \"distance\": \"235KM\"\n    }]\n  }]\n}];\nfunction App() {\n  _s();\n  const [inputCities, setInputCities] = useState('');\n  const [travelPlan, setTravelPlan] = useState([]);\n  const handleInputChange = e => {\n    setInputCities(e.target.value);\n  };\n  const handleGeneratePlan = () => {\n    const cities = inputCities.split(',').map(city => city.trim());\n    const plan = [];\n    for (let i = 0; i < cities.length - 1; i++) {\n      const departureCity = cities[i];\n      const destinationCity = cities[i + 1];\n      const departureData = travelData.find(city => city[\"departure city\"] === departureCity);\n      if (departureData) {\n        const destinationData = departureData.destinations.find(dest => dest.city === destinationCity);\n        if (destinationData) {\n          const airport = destinationData.airports[0]; // Choose the first airport for simplicity\n          plan.push({\n            from: departureCity,\n            to: destinationCity,\n            airport: airport.airportName,\n            distance: airport.distance\n          });\n        }\n      }\n    }\n    setTravelPlan(plan);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Travel Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter cities to visit (comma-separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputCities,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGeneratePlan,\n        children: \"Generate Travel Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), travelPlan.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Travel Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), travelPlan.map((leg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"From: \", leg.from, \" To: \", leg.to]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Land at: \", leg.airport, \" (\", leg.distance, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MWb8YE9d36l/tpfsCg5esDu3h9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","travelData","App","_s","inputCities","setInputCities","travelPlan","setTravelPlan","handleInputChange","e","target","value","handleGeneratePlan","cities","split","map","city","trim","plan","i","length","departureCity","destinationCity","departureData","find","destinationData","destinations","dest","airport","airports","push","from","to","airportName","distance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","leg","index","_c","$RefreshReg$"],"sources":["C:/Users/raedw/OneDrive/Desktop/sarra/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst travelData = [\n  {\n    \"departure city\": \"Paris\",\n    \"destinations\": [\n      {\n        \"city\": \"London\",\n        \"airports\": [\n          { \"airportName\": \"Heathrow Airport\", \"distance\": \"24KM\" },\n          { \"airportName\": \"Gatwick Airport\", \"distance\": \"45KM\" },\n          { \"airportName\": \"Stansted Airport\", \"distance\": \"63KM\" },\n          { \"airportName\": \"Luton Airport\", \"distance\": \"55KM\" }\n        ]\n      },\n      {\n        \"city\": \"Rome\",\n        \"airports\": [\n          { \"airportName\": \"Fiumicino Airport\", \"distance\": \"32KM\" },\n          { \"airportName\": \"Ciampino Airport\", \"distance\": \"15KM\" },\n          { \"airportName\": \"Perugia San Francesco d'Assisi Airport\", \"distance\": \"164KM\" },\n          { \"airportName\": \"Pescara Abruzzo Airport\", \"distance\": \"208KM\" }\n        ]\n      },\n      {\n        \"city\": \"Berlin\",\n        \"airports\": [\n          { \"airportName\": \"Berlin Brandenburg Airport\", \"distance\": \"22KM\" },\n          { \"airportName\": \"Leipzig/Halle Airport\", \"distance\": \"150KM\" },\n          { \"airportName\": \"Dresden Airport\", \"distance\": \"172KM\" },\n          { \"airportName\": \"Erfurt-Weimar Airport\", \"distance\": \"235KM\" }\n        ]\n      }\n    ]\n  },\n  {\n    \"departure city\": \"London\",\n    \"destinations\": [\n      {\n        \"city\": \"Paris\",\n        \"airports\": [\n          { \"airportName\": \"Charles de Gaulle Airport\", \"distance\": \"25KM\" },\n          { \"airportName\": \"Orly Airport\", \"distance\": \"14KM\" },\n          { \"airportName\": \"Beauvais-Tillé Airport\", \"distance\": \"85KM\" },\n          { \"airportName\": \"Le Bourget Airport\", \"distance\": \"13KM\" }\n        ]\n      },\n      {\n        \"city\": \"Rome\",\n        \"airports\": [\n          { \"airportName\": \"Fiumicino Airport\", \"distance\": \"32KM\" },\n          { \"airportName\": \"Ciampino Airport\", \"distance\": \"15KM\" },\n          { \"airportName\": \"Perugia San Francesco d'Assisi Airport\", \"distance\": \"164KM\" },\n          { \"airportName\": \"Pescara Abruzzo Airport\", \"distance\": \"208KM\" }\n        ]\n      },\n      {\n        \"city\": \"Berlin\",\n        \"airports\": [\n          { \"airportName\": \"Berlin Brandenburg Airport\", \"distance\": \"22KM\" },\n          { \"airportName\": \"Leipzig/Halle Airport\", \"distance\": \"150KM\" },\n          { \"airportName\": \"Dresden Airport\", \"distance\": \"172KM\" },\n          { \"airportName\": \"Erfurt-Weimar Airport\", \"distance\": \"235KM\" }\n        ]\n      }\n    ]\n  }\n];\n\nfunction App() {\n  const [inputCities, setInputCities] = useState('');\n  const [travelPlan, setTravelPlan] = useState([]);\n  \n  const handleInputChange = (e) => {\n    setInputCities(e.target.value);\n  };\n  \n  const handleGeneratePlan = () => {\n    const cities = inputCities.split(',').map(city => city.trim());\n    const plan = [];\n    \n    for (let i = 0; i < cities.length - 1; i++) {\n      const departureCity = cities[i];\n      const destinationCity = cities[i + 1];\n      \n      const departureData = travelData.find(city => city[\"departure city\"] === departureCity);\n      if (departureData) {\n        const destinationData = departureData.destinations.find(dest => dest.city === destinationCity);\n        if (destinationData) {\n          const airport = destinationData.airports[0]; // Choose the first airport for simplicity\n          plan.push({\n            from: departureCity,\n            to: destinationCity,\n            airport: airport.airportName,\n            distance: airport.distance\n          });\n        }\n      }\n    }\n    \n    setTravelPlan(plan);\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1>Travel Planner</h1>\n      <div>\n        <label>\n          Enter cities to visit (comma-separated):\n          <input type=\"text\" value={inputCities} onChange={handleInputChange} />\n        </label>\n        <button onClick={handleGeneratePlan}>Generate Travel Plan</button>\n      </div>\n      {travelPlan.length > 0 && (\n        <div>\n          <h2>Your Travel Plan</h2>\n          {travelPlan.map((leg, index) => (\n            <div key={index}>\n              <p>From: {leg.from} To: {leg.to}</p>\n              <p>Land at: {leg.airport} ({leg.distance})</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}